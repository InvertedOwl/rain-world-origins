plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name = 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
	}

	maven {
		url = 'https://maven.cafeteria.dev'
		content {
			includeGroup 'net.adriantodt.fabricmc'
		}
	}
	maven {
		url "https://maven.jamieswhiteshirt.com/libs-release"
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
	maven {
		url "https://jitpack.io"
	}
	maven {
		url "https://maven.shedaniel.me/"
	}
	maven {
		url "https://maven.terraformersmc.com/"
	}
	maven {
		name "cloth config"
		url "https://maven.shedaniel.me/"
	}
	maven {
		name "mod menu"
		url "https://maven.terraformersmc.com/"
	}
//	maven {
//		name "playerabilitylib"
//		url = 'https://ladysnake.jfrog.io/artifactory/mods'
//	}
	maven {
		name "reach entity attributes"
		url "https://maven.jamieswhiteshirt.com/libs-release"
	}
	maven {
		url "https://cursemaven.com"
	}
}

////loom {
////    splitEnvironmentSourceSets()
////
////    mods {
////        "rain-world-origins" {
////            sourceSet sourceSets.main
////            sourceSet sourceSets.client
////        }
////    }
//
//}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation files("libs/Origins-1.20.1-1.10.0.jar")
	modImplementation files("libs/Apoli-1.20.1-2.9.0.jar")
	modImplementation files("libs/Pehkui-3.7.7+1.14.4-1.20.1.jar")
	modImplementation files("libs/Calio-1.20-1.11.0.jar")
	modImplementation files("libs/cloth-config-11.1.106-fabric.jar")
	modImplementation files("libs/pal-1.8.0.jar")
//	modImplementation files("libs/cardinal-components-api-5.2.2.jar:cardinal-components-base")
//	modImplementation files("libs/cardinal-components-api-5.2.2.jar:cardinal-components-entity")
	modImplementation "com.github.virtuoel:pehkui:3.7.8"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.2.2"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.2.2"
	include modImplementation("com.jamieswhiteshirt:reach-entity-attributes:2.4.0")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
		maven {
			url "https://jitpack.io"
		}
	}
}